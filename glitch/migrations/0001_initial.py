# Generated by Django 5.0.1 on 2024-05-06 11:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gebruiker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('voornaam', models.CharField(max_length=32)),
                ('achternaam', models.CharField(max_length=32)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('ADMIN', 'Admin'), ('DOCENT', 'Docent'), ('STUDENT', 'Student')], default='STUDENT', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('profielfoto', models.ImageField(null=True, upload_to='profielfotos/')),
                ('bio', models.TextField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Activiteit',
            fields=[
                ('activiteit_id', models.AutoField(primary_key=True, serialize=False)),
                ('stap', models.IntegerField(null=True)),
                ('taak', models.CharField(max_length=100, null=True)),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('challenge_id', models.AutoField(primary_key=True, serialize=False)),
                ('point_concept_chalenge', models.IntegerField()),
                ('verzamelde_punten', models.IntegerField(null=True)),
                ('activiteit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='glitch.activiteit')),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CoreAssignment',
            fields=[
                ('opdracht_id', models.AutoField(primary_key=True, serialize=False)),
                ('opdrachtnaam', models.CharField(max_length=100)),
                ('deadline', models.DateField(null=True)),
                ('score', models.IntegerField(null=True)),
                ('bijlage', models.FileField(null=True, upload_to='opdracht_bijlagen/')),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Domein',
            fields=[
                ('domein_id', models.AutoField(primary_key=True, serialize=False)),
                ('domeinnaam', models.CharField(max_length=100)),
                ('bovenliggend_domein', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='glitch.domein')),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cursusjaar',
            fields=[
                ('cursusjaar_id', models.AutoField(primary_key=True, serialize=False)),
                ('naam', models.CharField(max_length=100)),
                ('cursusjaar', models.CharField(max_length=100)),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('domein', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glitch.domein')),
            ],
        ),
        migrations.CreateModel(
            name='Cursus',
            fields=[
                ('vak_cursus_id', models.AutoField(primary_key=True, serialize=False)),
                ('vaknaam', models.CharField(max_length=100)),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('domein', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='glitch.domein')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('module_id', models.AutoField(primary_key=True, serialize=False)),
                ('modulenaam', models.CharField(max_length=100)),
                ('beschrijving', models.TextField()),
                ('activiteit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='glitch.activiteit')),
                ('chalenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glitch.challenge')),
                ('cursus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='glitch.cursus')),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('opdracht', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glitch.coreassignment')),
            ],
        ),
        migrations.AddField(
            model_name='activiteit',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activiteiten', to='glitch.module'),
        ),
        migrations.CreateModel(
            name='Notificatie',
            fields=[
                ('notificatie_id', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField(null=True)),
                ('beschrijving', models.TextField(null=True)),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Onderwijsperiode',
            fields=[
                ('onderwijsperiode_id', models.AutoField(primary_key=True, serialize=False)),
                ('periode', models.CharField(max_length=100)),
                ('cursusjaar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='glitch.cursusjaar')),
                ('domein', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='glitch.domein')),
            ],
        ),
        migrations.AddField(
            model_name='cursus',
            name='onderwijsperiode',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='glitch.onderwijsperiode'),
        ),
        migrations.CreateModel(
            name='Voortgang',
            fields=[
                ('voortgang_id', models.AutoField(primary_key=True, serialize=False)),
                ('totale_score', models.IntegerField(null=True)),
                ('cursus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='glitch.cursus')),
                ('gebruiker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='voortgang_gebruikers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='module',
            name='voortgang',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='glitch.voortgang'),
        ),
        migrations.AddField(
            model_name='gebruiker',
            name='voortgang',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gebruikers_voortgang', to='glitch.voortgang'),
        ),
    ]
